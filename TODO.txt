*) implement --save-ast, --save-symbol- table
*) improve parsing time of a file (expression recognition is taking way too much time) (how?)

*) int a[function()] = {1,2,3};
   => error: variable-sized object may not be initialized

*) check "unknown format code '{0}'" errors, they are just warnings with gcc
*) ask someone about: 'int b = sum(a, b);', the rightmost b does not exist yet
      => what to do when using a variable in its own initialization?
*) new names for declarationProcessor and definitionProcessor

CODE GENERATION:
*) finish/check pointers (&(*aa);) (fixed i think)
*) static arrays + array subscripting
*) test all unary, binary and ternary operators
*) check argument loading for functions
*) printf/scanf
*) check situations where there are multiple retfs in a row
*) void pointers


EXTRAS:
*) continue, break
*) for loops
*) const correctnes
*) implicit and explicit type conversions
*) nested functions
*) check whether all paths in a function body end with a return statement
    maybe:
    *) add warnings
    *) warning when variable declarations have no initializer
    *) warning when overinitializing arrays
    *) default parameters
    *) inline functions
    *) enums


DONE:
*) recognize printf/scanf after import stdio
*) fix very long nested expressions
*) check if parameter node code generation can be 'pass'
*) add -saveast flag to c2p.py for AST output
*) improve parsing time of a file (expression recognition is taking way too much time)
*) finish/check pointers (&(*aa);)
*) check unary arithmetic operator
