*) add -saveast flag to c2p.py for AST output

CODE GENERATION:
*) finish/check pointers (&(*aa);)
*) static arrays + array subscripting
*) test all unary, binary an ternary operators
*) check argument loading for functions
*) new names for declarationProcessor and definitionProcessor
*) make sure that all ints are converted to booleans when used in conditions
*) printf/scanf


EXTRAS:
*) continue, break
*) for loops
*) const correctnes
*) implicit and explicit type conversions
*) nested functions
*) check whether all paths in a function body end with a return statement
    maybe:
    *) add warnings
    *) warning when variable declarations have no initializer
    *) warning when overinitializing arrays
    *) default parameters
    *) inline functions
    *) enums


DONE:
*) recognize printf/scanf after import stdio
*) fix very long nested expressions
*) check if parameter node code generation can be 'pass'



FIX:

====

the following compiles: 'int b = sum(a, b);', the rightmost b does not exist yet

=====

This works ok:
    int a, b;
    a = 10;
    b = 5;

This does not, lines 2 and 3 refer enter a wrong nesting depth value (2 instead of 0)
    int a, b;
    a = 10;
    b = 5;
    while (b < a) {
      a = a - 1;
      if (c != '6') {
        a = a - 1;
      }
      else {
        b = b + 1;
      }
    }
