# Generated from SmallC.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\67")
        buf.write("\u015f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3")
        buf.write("\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3")
        buf.write("\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30")
        buf.write("\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 ")
        buf.write("\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3")
        buf.write("#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3")
        buf.write(")\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3")
        buf.write("-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3/\3")
        buf.write("/\3/\7/\u0113\n/\f/\16/\u0116\13/\3/\3/\3\60\3\60\3\60")
        buf.write("\3\60\7\60\u011e\n\60\f\60\16\60\u0121\13\60\3\60\3\60")
        buf.write("\3\60\3\60\3\60\3\61\6\61\u0129\n\61\r\61\16\61\u012a")
        buf.write("\3\62\3\62\3\62\3\62\3\62\5\62\u0132\n\62\3\62\5\62\u0135")
        buf.write("\n\62\3\62\3\62\3\62\5\62\u013a\n\62\3\62\3\62\5\62\u013e")
        buf.write("\n\62\3\63\3\63\7\63\u0142\n\63\f\63\16\63\u0145\13\63")
        buf.write("\3\64\3\64\3\64\5\64\u014a\n\64\3\64\3\64\3\65\3\65\3")
        buf.write("\65\3\65\7\65\u0152\n\65\f\65\16\65\u0155\13\65\3\65\3")
        buf.write("\65\3\66\6\66\u015a\n\66\r\66\16\66\u015b\3\66\3\66\3")
        buf.write("\u011f\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67\3\2\16\4\2\f\f\17\17\3\2\62;\4\2GGgg\4\2--//\5\2C")
        buf.write("\\aac|\7\2\62;C\\^^aac|\3\2))\3\2$$\3\2^^\6\2$$^^pptt")
        buf.write("\6\2\f\f\17\17$$^^\5\2\13\f\17\17\"\"\u016a\2\3\3\2\2")
        buf.write("\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2")
        buf.write("\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25")
        buf.write("\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3")
        buf.write("\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2")
        buf.write("\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2")
        buf.write("\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2")
        buf.write("9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2")
        buf.write("\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2")
        buf.write("\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2")
        buf.write("\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3")
        buf.write("\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i")
        buf.write("\3\2\2\2\2k\3\2\2\2\3m\3\2\2\2\5o\3\2\2\2\7q\3\2\2\2\t")
        buf.write("s\3\2\2\2\13u\3\2\2\2\rx\3\2\2\2\17{\3\2\2\2\21~\3\2\2")
        buf.write("\2\23\u0081\3\2\2\2\25\u0083\3\2\2\2\27\u0086\3\2\2\2")
        buf.write("\31\u0088\3\2\2\2\33\u008b\3\2\2\2\35\u008d\3\2\2\2\37")
        buf.write("\u008f\3\2\2\2!\u0091\3\2\2\2#\u0093\3\2\2\2%\u0095\3")
        buf.write("\2\2\2\'\u0098\3\2\2\2)\u009b\3\2\2\2+\u009d\3\2\2\2-")
        buf.write("\u009f\3\2\2\2/\u00a1\3\2\2\2\61\u00a3\3\2\2\2\63\u00a5")
        buf.write("\3\2\2\2\65\u00a7\3\2\2\2\67\u00a9\3\2\2\29\u00b2\3\2")
        buf.write("\2\2;\u00b4\3\2\2\2=\u00b6\3\2\2\2?\u00b8\3\2\2\2A\u00bd")
        buf.write("\3\2\2\2C\u00c3\3\2\2\2E\u00c7\3\2\2\2G\u00cc\3\2\2\2")
        buf.write("I\u00d2\3\2\2\2K\u00db\3\2\2\2M\u00e3\3\2\2\2O\u00e6\3")
        buf.write("\2\2\2Q\u00eb\3\2\2\2S\u00ee\3\2\2\2U\u00f4\3\2\2\2W\u00f8")
        buf.write("\3\2\2\2Y\u00fe\3\2\2\2[\u0107\3\2\2\2]\u010e\3\2\2\2")
        buf.write("_\u0119\3\2\2\2a\u0128\3\2\2\2c\u013d\3\2\2\2e\u013f\3")
        buf.write("\2\2\2g\u0146\3\2\2\2i\u014d\3\2\2\2k\u0159\3\2\2\2mn")
<<<<<<< HEAD
        buf.write("\7?\2\2n\4\3\2\2\2op\7A\2\2p\6\3\2\2\2qr\7<\2\2r\b\3\2")
        buf.write("\2\2st\7~\2\2tu\7~\2\2u\n\3\2\2\2vw\7(\2\2wx\7(\2\2x\f")
        buf.write("\3\2\2\2yz\7?\2\2z{\7?\2\2{\16\3\2\2\2|}\7#\2\2}~\7?\2")
        buf.write("\2~\20\3\2\2\2\177\u0080\7>\2\2\u0080\22\3\2\2\2\u0081")
        buf.write("\u0082\7>\2\2\u0082\u0083\7?\2\2\u0083\24\3\2\2\2\u0084")
        buf.write("\u0085\7@\2\2\u0085\26\3\2\2\2\u0086\u0087\7@\2\2\u0087")
        buf.write("\u0088\7?\2\2\u0088\30\3\2\2\2\u0089\u008a\7-\2\2\u008a")
        buf.write("\32\3\2\2\2\u008b\u008c\7/\2\2\u008c\34\3\2\2\2\u008d")
        buf.write("\u008e\7,\2\2\u008e\36\3\2\2\2\u008f\u0090\7\61\2\2\u0090")
        buf.write(" \3\2\2\2\u0091\u0092\7\'\2\2\u0092\"\3\2\2\2\u0093\u0094")
        buf.write("\7-\2\2\u0094\u0095\7-\2\2\u0095$\3\2\2\2\u0096\u0097")
        buf.write("\7/\2\2\u0097\u0098\7/\2\2\u0098&\3\2\2\2\u0099\u009a")
        buf.write("\7(\2\2\u009a(\3\2\2\2\u009b\u009c\7#\2\2\u009c*\3\2\2")
        buf.write("\2\u009d\u009e\7*\2\2\u009e,\3\2\2\2\u009f\u00a0\7+\2")
        buf.write("\2\u00a0.\3\2\2\2\u00a1\u00a2\7]\2\2\u00a2\60\3\2\2\2")
        buf.write("\u00a3\u00a4\7_\2\2\u00a4\62\3\2\2\2\u00a5\u00a6\7=\2")
        buf.write("\2\u00a6\64\3\2\2\2\u00a7\u00a8\7%\2\2\u00a8\u00a9\7k")
        buf.write("\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7e\2\2\u00ab\u00ac")
        buf.write("\7n\2\2\u00ac\u00ad\7w\2\2\u00ad\u00ae\7f\2\2\u00ae\u00af")
        buf.write("\7g\2\2\u00af\66\3\2\2\2\u00b0\u00b1\7\60\2\2\u00b18\3")
        buf.write("\2\2\2\u00b2\u00b3\7.\2\2\u00b3:\3\2\2\2\u00b4\u00b5\7")
        buf.write("}\2\2\u00b5<\3\2\2\2\u00b6\u00b7\7\177\2\2\u00b7>\3\2")
        buf.write("\2\2\u00b8\u00b9\7e\2\2\u00b9\u00ba\7j\2\2\u00ba\u00bb")
=======
        buf.write("\7.\2\2n\4\3\2\2\2op\7?\2\2p\6\3\2\2\2qr\7A\2\2r\b\3\2")
        buf.write("\2\2st\7<\2\2t\n\3\2\2\2uv\7~\2\2vw\7~\2\2w\f\3\2\2\2")
        buf.write("xy\7(\2\2yz\7(\2\2z\16\3\2\2\2{|\7?\2\2|}\7?\2\2}\20\3")
        buf.write("\2\2\2~\177\7#\2\2\177\u0080\7?\2\2\u0080\22\3\2\2\2\u0081")
        buf.write("\u0082\7>\2\2\u0082\24\3\2\2\2\u0083\u0084\7>\2\2\u0084")
        buf.write("\u0085\7?\2\2\u0085\26\3\2\2\2\u0086\u0087\7@\2\2\u0087")
        buf.write("\30\3\2\2\2\u0088\u0089\7@\2\2\u0089\u008a\7?\2\2\u008a")
        buf.write("\32\3\2\2\2\u008b\u008c\7-\2\2\u008c\34\3\2\2\2\u008d")
        buf.write("\u008e\7/\2\2\u008e\36\3\2\2\2\u008f\u0090\7,\2\2\u0090")
        buf.write(" \3\2\2\2\u0091\u0092\7\61\2\2\u0092\"\3\2\2\2\u0093\u0094")
        buf.write("\7\'\2\2\u0094$\3\2\2\2\u0095\u0096\7-\2\2\u0096\u0097")
        buf.write("\7-\2\2\u0097&\3\2\2\2\u0098\u0099\7/\2\2\u0099\u009a")
        buf.write("\7/\2\2\u009a(\3\2\2\2\u009b\u009c\7(\2\2\u009c*\3\2\2")
        buf.write("\2\u009d\u009e\7#\2\2\u009e,\3\2\2\2\u009f\u00a0\7]\2")
        buf.write("\2\u00a0.\3\2\2\2\u00a1\u00a2\7_\2\2\u00a2\60\3\2\2\2")
        buf.write("\u00a3\u00a4\7*\2\2\u00a4\62\3\2\2\2\u00a5\u00a6\7+\2")
        buf.write("\2\u00a6\64\3\2\2\2\u00a7\u00a8\7=\2\2\u00a8\66\3\2\2")
        buf.write("\2\u00a9\u00aa\7%\2\2\u00aa\u00ab\7k\2\2\u00ab\u00ac\7")
        buf.write("p\2\2\u00ac\u00ad\7e\2\2\u00ad\u00ae\7n\2\2\u00ae\u00af")
        buf.write("\7w\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1\7g\2\2\u00b18\3")
        buf.write("\2\2\2\u00b2\u00b3\7\60\2\2\u00b3:\3\2\2\2\u00b4\u00b5")
        buf.write("\7}\2\2\u00b5<\3\2\2\2\u00b6\u00b7\7\177\2\2\u00b7>\3")
        buf.write("\2\2\2\u00b8\u00b9\7e\2\2\u00b9\u00ba\7j\2\2\u00ba\u00bb")
>>>>>>> bcd69043202865c145ad1703f47f6858eefe047b
        buf.write("\7c\2\2\u00bb\u00bc\7t\2\2\u00bc@\3\2\2\2\u00bd\u00be")
        buf.write("\7h\2\2\u00be\u00bf\7n\2\2\u00bf\u00c0\7q\2\2\u00c0\u00c1")
        buf.write("\7c\2\2\u00c1\u00c2\7v\2\2\u00c2B\3\2\2\2\u00c3\u00c4")
        buf.write("\7k\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7v\2\2\u00c6D\3")
        buf.write("\2\2\2\u00c7\u00c8\7x\2\2\u00c8\u00c9\7q\2\2\u00c9\u00ca")
        buf.write("\7k\2\2\u00ca\u00cb\7f\2\2\u00cbF\3\2\2\2\u00cc\u00cd")
        buf.write("\7e\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7p\2\2\u00cf\u00d0")
        buf.write("\7u\2\2\u00d0\u00d1\7v\2\2\u00d1H\3\2\2\2\u00d2\u00d3")
        buf.write("\7x\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6")
        buf.write("\7c\2\2\u00d6\u00d7\7v\2\2\u00d7\u00d8\7k\2\2\u00d8\u00d9")
        buf.write("\7n\2\2\u00d9\u00da\7g\2\2\u00daJ\3\2\2\2\u00db\u00dc")
        buf.write("\7o\2\2\u00dc\u00dd\7w\2\2\u00dd\u00de\7v\2\2\u00de\u00df")
        buf.write("\7c\2\2\u00df\u00e0\7d\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2")
        buf.write("\7g\2\2\u00e2L\3\2\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5")
        buf.write("\7h\2\2\u00e5N\3\2\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8")
        buf.write("\7n\2\2\u00e8\u00e9\7u\2\2\u00e9\u00ea\7g\2\2\u00eaP\3")
        buf.write("\2\2\2\u00eb\u00ec\7f\2\2\u00ec\u00ed\7q\2\2\u00edR\3")
        buf.write("\2\2\2\u00ee\u00ef\7y\2\2\u00ef\u00f0\7j\2\2\u00f0\u00f1")
        buf.write("\7k\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7g\2\2\u00f3T\3")
        buf.write("\2\2\2\u00f4\u00f5\7h\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7")
        buf.write("\7t\2\2\u00f7V\3\2\2\2\u00f8\u00f9\7d\2\2\u00f9\u00fa")
        buf.write("\7t\2\2\u00fa\u00fb\7g\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd")
        buf.write("\7m\2\2\u00fdX\3\2\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100")
        buf.write("\7q\2\2\u0100\u0101\7p\2\2\u0101\u0102\7v\2\2\u0102\u0103")
        buf.write("\7k\2\2\u0103\u0104\7p\2\2\u0104\u0105\7w\2\2\u0105\u0106")
        buf.write("\7g\2\2\u0106Z\3\2\2\2\u0107\u0108\7t\2\2\u0108\u0109")
        buf.write("\7g\2\2\u0109\u010a\7v\2\2\u010a\u010b\7w\2\2\u010b\u010c")
        buf.write("\7t\2\2\u010c\u010d\7p\2\2\u010d\\\3\2\2\2\u010e\u010f")
        buf.write("\7\61\2\2\u010f\u0110\7\61\2\2\u0110\u0114\3\2\2\2\u0111")
        buf.write("\u0113\n\2\2\2\u0112\u0111\3\2\2\2\u0113\u0116\3\2\2\2")
        buf.write("\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115\u0117\3")
        buf.write("\2\2\2\u0116\u0114\3\2\2\2\u0117\u0118\b/\2\2\u0118^\3")
        buf.write("\2\2\2\u0119\u011a\7\61\2\2\u011a\u011b\7,\2\2\u011b\u011f")
        buf.write("\3\2\2\2\u011c\u011e\13\2\2\2\u011d\u011c\3\2\2\2\u011e")
        buf.write("\u0121\3\2\2\2\u011f\u0120\3\2\2\2\u011f\u011d\3\2\2\2")
        buf.write("\u0120\u0122\3\2\2\2\u0121\u011f\3\2\2\2\u0122\u0123\7")
        buf.write(",\2\2\u0123\u0124\7\61\2\2\u0124\u0125\3\2\2\2\u0125\u0126")
        buf.write("\b\60\2\2\u0126`\3\2\2\2\u0127\u0129\t\3\2\2\u0128\u0127")
        buf.write("\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u0128\3\2\2\2\u012a")
        buf.write("\u012b\3\2\2\2\u012bb\3\2\2\2\u012c\u012d\5a\61\2\u012d")
        buf.write("\u012e\7\60\2\2\u012e\u0134\5a\61\2\u012f\u0131\t\4\2")
        buf.write("\2\u0130\u0132\t\5\2\2\u0131\u0130\3\2\2\2\u0131\u0132")
        buf.write("\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0135\5a\61\2\u0134")
        buf.write("\u012f\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u013e\3\2\2\2")
        buf.write("\u0136\u0137\5a\61\2\u0137\u0139\t\4\2\2\u0138\u013a\t")
        buf.write("\5\2\2\u0139\u0138\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013b")
        buf.write("\3\2\2\2\u013b\u013c\5a\61\2\u013c\u013e\3\2\2\2\u013d")
        buf.write("\u012c\3\2\2\2\u013d\u0136\3\2\2\2\u013ed\3\2\2\2\u013f")
        buf.write("\u0143\t\6\2\2\u0140\u0142\t\7\2\2\u0141\u0140\3\2\2\2")
        buf.write("\u0142\u0145\3\2\2\2\u0143\u0141\3\2\2\2\u0143\u0144\3")
        buf.write("\2\2\2\u0144f\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0149")
        buf.write("\t\b\2\2\u0147\u014a\13\2\2\2\u0148\u014a\7\f\2\2\u0149")
        buf.write("\u0147\3\2\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2")
        buf.write("\u014b\u014c\t\b\2\2\u014ch\3\2\2\2\u014d\u0153\t\t\2")
        buf.write("\2\u014e\u014f\t\n\2\2\u014f\u0152\t\13\2\2\u0150\u0152")
        buf.write("\n\f\2\2\u0151\u014e\3\2\2\2\u0151\u0150\3\2\2\2\u0152")
        buf.write("\u0155\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2")
        buf.write("\u0154\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0157\t")
        buf.write("\t\2\2\u0157j\3\2\2\2\u0158\u015a\t\r\2\2\u0159\u0158")
        buf.write("\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u0159\3\2\2\2\u015b")
        buf.write("\u015c\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015e\b\66\2")
        buf.write("\2\u015el\3\2\2\2\17\2\u0114\u011f\u012a\u0131\u0134\u0139")
        buf.write("\u013d\u0143\u0149\u0151\u0153\u015b\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    TYPECHAR = 31
    TYPEFLOAT = 32
    TYPEINT = 33
    TYPEVOID = 34
    CONST = 35
    VOLATILE = 36
    MUTABLE = 37
    IF = 38
    ELSE = 39
    DO = 40
    WHILE = 41
    FOR = 42
    BREAK = 43
    CONTINUE = 44
    RETURN = 45
    COMMENT = 46
    MULTICOMMENT = 47
    INTEGER = 48
    FLOAT = 49
    IDENTIFIER = 50
    CHARACTER = 51
    STRING = 52
    WS = 53

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
<<<<<<< HEAD
            "'='", "'?'", "':'", "'||'", "'&&'", "'=='", "'!='", "'<'", 
            "'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", "'++'", 
            "'--'", "'&'", "'!'", "'('", "')'", "'['", "']'", "';'", "'#include'", 
            "'.'", "','", "'{'", "'}'", "'char'", "'float'", "'int'", "'void'", 
            "'const'", "'volatile'", "'mutable'", "'if'", "'else'", "'do'", 
            "'while'", "'for'", "'break'", "'continue'", "'return'" ]
=======
            "','", "'='", "'?'", "':'", "'||'", "'&&'", "'=='", "'!='", 
            "'<'", "'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'++'", "'--'", "'&'", "'!'", "'['", "']'", "'('", "')'", "';'", 
            "'#include'", "'.'", "'{'", "'}'", "'char'", "'float'", "'int'", 
            "'void'", "'const'", "'volatile'", "'mutable'", "'if'", "'else'", 
            "'do'", "'while'", "'for'", "'break'", "'continue'", "'return'" ]
>>>>>>> bcd69043202865c145ad1703f47f6858eefe047b

    symbolicNames = [ "<INVALID>",
            "TYPECHAR", "TYPEFLOAT", "TYPEINT", "TYPEVOID", "CONST", "VOLATILE", 
            "MUTABLE", "IF", "ELSE", "DO", "WHILE", "FOR", "BREAK", "CONTINUE", 
            "RETURN", "COMMENT", "MULTICOMMENT", "INTEGER", "FLOAT", "IDENTIFIER", 
            "CHARACTER", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "TYPECHAR", "TYPEFLOAT", 
                  "TYPEINT", "TYPEVOID", "CONST", "VOLATILE", "MUTABLE", 
                  "IF", "ELSE", "DO", "WHILE", "FOR", "BREAK", "CONTINUE", 
                  "RETURN", "COMMENT", "MULTICOMMENT", "INTEGER", "FLOAT", 
                  "IDENTIFIER", "CHARACTER", "STRING", "WS" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


